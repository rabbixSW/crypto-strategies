//Inputs - Length
input_imacd = input(34, "Length", group = "IMACD")
input_imacd_sma = input(9, "SMA", group = "IMACD")
input_imacd_threshold = input(0.1, "Threshold", group = "IMACD")

calc_smma(float before, float src, int length) =>
  na(before) ? ta.sma(src, length) : (before * (length - 1) + src) / length

calc_zlema(float src, int length) =>
	ema1 = ta.ema(src, length)
	ema2 = ta.ema(ema1, length)
	diff = ema1 - ema2
	ema1 + diff

var imacd_hi = float(na)
imacd_hi := calc_smma(imacd_hi[1], high, input_imacd)

var imacd_lo = float(na)
imacd_lo := calc_smma(imacd_lo[1], low, input_imacd)

var imacd_mi = float(na)
imacd_mi := calc_zlema(hlc3, input_imacd)

imacd_value = (imacd_mi > imacd_hi) ? (imacd_mi - imacd_hi) : (imacd_mi < imacd_lo) ? (imacd_mi - imacd_lo) : 0
imacd_SMA = ta.sma(imacd_value, input_imacd_sma)
imacd_history = imacd_value - imacd_SMA

//Strategy values
imacd_buy = ta.crossover(imacd_value, imacd_SMA)
imacd_sell = ta.crossunder(imacd_value, imacd_SMA)

plot(imacd_value, "IMACD", color.rgb(255, 130, 230), 1, display = display.data_window + display.status_line)
plot(imacd_SMA, "IMACD - SMA", color.rgb(168, 30, 255), 1, display = display.data_window + display.status_line)
plot(imacd_history, "IMACD - History", color.rgb(50, 128, 128, 50), 1, display = display.data_window + display.status_line)